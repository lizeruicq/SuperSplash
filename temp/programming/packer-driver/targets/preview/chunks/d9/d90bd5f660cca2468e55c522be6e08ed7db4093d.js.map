{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/Bullet.ts"],"names":["_decorator","Component","Vec2","RigidBody2D","Contact2DType","Collider2D","Enum","instantiate","Prefab","tween","Vec3","Animation","director","Director","player","AIPlayer","SoundManager","GameManager","ccclass","property","WeaponType","BulletType","Bullet","type","tooltip","_shooterId","_rigidBody","_direction","_velocity","_timer","_isExploding","_pendingDestroy","onLoad","getComponent","console","error","collider","on","BEGIN_CONTACT","onBeginContact","start","update","deltaTime","lifeTime","bulletType","ROCKET","handleTimeoutExplosion","destroyBullet","set","x","speed","y","linearVelocity","init","direction","shooterId","normalize","angle","Math","atan2","PI","node","setRotationFromEuler","selfCollider","otherCollider","contact","otherNode","otherVehicleId","getVehicleId","playerComponent","aiPlayerComponent","handleVehicleHit","handleObstacleHit","vehicleNode","log","NORMAL","handleNormalBulletHit","handleBulletExplosion","handleRocketHit","takeDamage","damage","stopMovement","createBulletExplosion","instance","playSoundEffect","hitVehicleNode","createRocketExplosion","dealExplosionDamage","clearPaintInRange","explosionPrefab","explosion","addChild","setPosition","ZERO","animationComponent","play","scheduleOnce","isValid","destroy","to","scale","delay","call","allVehicles","getAllVehiclesInRange","forEach","vehicle","distance","worldPosition","explosionRadius","damageRatio","actualDamage","gameManager","getInstance","warn","paintManager","getPaintManager","explosionCenter","removedCount","vehicles","playerNodes","scene","getComponentsInChildren","p","push","aiNodes","ai","playHitSound","playerComp","aiComp","once","EVENT_AFTER_PHYSICS"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec2, RigidBody2D, Contact2DType, IPhysics2DContact, Collider2D, Enum, instantiate, Prefab, tween, Vec3, Animation, AnimationEventType, director, Director } from 'cc';\nimport { player } from './player';\nimport { AIPlayer } from './AIPlayer';\nimport { SoundManager } from './SoundManager';\nimport { GameManager } from './GameManager';\n\nconst { ccclass, property } = _decorator;\n\n// 定义武器类型枚举\nexport enum WeaponType {\n    NORMAL = 0,  // 普通子弹\n    // FLAME = 1,   // 火焰喷射\n    ROCKET = 2   // 火箭弹\n}\n\n// 定义子弹类型枚举\nexport enum BulletType {\n    NORMAL = 0,  // 普通子弹\n    // FLAME = 1,   // 火焰\n    ROCKET = 2   // 火箭弹\n}\n\n// 将枚举注册到Cocos Creator中\nEnum(WeaponType);\nEnum(BulletType);\n\n@ccclass('Bullet')\nexport class Bullet extends Component {\n    @property\n    speed: number = 50; // 子弹速度\n\n    @property\n    damage: number = 5; // 伤害值\n\n    @property({\n        type: BulletType,\n        tooltip: \"子弹类型\"\n    })\n    bulletType: BulletType = BulletType.NORMAL;\n\n    @property({\n        tooltip: \"子弹存活时间（秒）\"\n    })\n    lifeTime: number = 3.0;\n\n    @property({\n        type: Prefab,\n        tooltip: \"爆炸效果预制体（火箭弹专用）\"\n    })\n    explosionPrefab: Prefab = null!;\n\n    @property({\n        tooltip: \"爆炸范围（火箭弹专用）\"\n    })\n    explosionRadius: number = 300;\n\n    private _shooterId: string = ''; // 发射者ID\n    private _rigidBody: RigidBody2D = null!;\n    private _direction: Vec2 = new Vec2(0, 1); // 默认向上\n    private _velocity: Vec2 = new Vec2(0, 0);\n    private _timer: number = 0;\n    private _isExploding: boolean = false; // 是否正在爆炸\n    private _pendingDestroy: boolean = false; // 延迟销毁标记，避免在物理回调中立刻销毁\n\n    onLoad() {\n        // if(this.bulletType!= BulletType.FLAME)\n        // {\n        this._rigidBody = this.getComponent(RigidBody2D);\n        if (!this._rigidBody) {\n            console.error('Bullet: RigidBody2D组件未找到');\n        // }\n        }\n       \n\n        // 注册碰撞回调\n        const collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n\n    start() {\n        // // 根据子弹类型调整属性\n        // this.adjustBulletProperties();\n    }\n\n    update(deltaTime: number) {\n        // 如果正在爆炸，则不再更新位置\n        if (this._isExploding) {\n            return;\n        }\n\n        this._timer += deltaTime;\n\n        // 检查是否超过存活时间\n        if (this._timer >= this.lifeTime) {\n            // 火箭弹超时爆炸\n            if (this.bulletType === BulletType.ROCKET) {\n                this.handleTimeoutExplosion();\n                return;\n            }\n            this.destroyBullet();\n            return;\n        }\n\n        // 更新位置\n        if (this._rigidBody) {\n            this._velocity.set(this._direction.x * this.speed, this._direction.y * this.speed);\n            this._rigidBody.linearVelocity = this._velocity;\n        }\n    }\n\n    /**\n     * 初始化子弹\n     * @param direction 子弹方向\n     * @param shooterId 发射者ID\n     */\n    public init(direction: Vec2, shooterId: string) {\n        this._direction = direction.normalize();\n        this._shooterId = shooterId;\n\n    //     if(this.bulletType!= BulletType.FLAME)\n    //     {\n    // // 设置初始旋转角度\n        const angle = Math.atan2(direction.y, direction.x) * 180 / Math.PI;\n        this.node.setRotationFromEuler(0, 0, angle - 90);\n    // }\n        }    \n\n    /**\n     * 碰撞回调\n     */\n    private onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact) {\n        const otherNode = otherCollider.node;\n        \n        // 不与发射者碰撞\n        const otherVehicleId = this.getVehicleId(otherNode);\n        if (otherVehicleId === this._shooterId) {\n            return;\n        }\n\n        // 检查是否碰撞到车辆\n        const playerComponent = otherNode.getComponent(player);\n        const aiPlayerComponent = otherNode.getComponent(AIPlayer);\n\n        if (playerComponent || aiPlayerComponent) {\n            this.handleVehicleHit(otherNode, playerComponent, aiPlayerComponent);\n        } else {\n            // 碰撞到其他物体（如墙壁）\n            this.handleObstacleHit();\n        }\n    }\n\n    /**\n     * 处理车辆碰撞\n     */\n    private handleVehicleHit(vehicleNode: any, playerComponent: player | null, aiPlayerComponent: AIPlayer | null) {\n        console.log('子弹撞击类型',this.bulletType);\n        switch (this.bulletType) {\n            case BulletType.NORMAL:\n                this.handleNormalBulletHit(playerComponent, aiPlayerComponent);\n                // 普通子弹碰撞后也产生爆炸效果\n                this.handleBulletExplosion();\n                return;\n            // case BulletType.FLAME:\n            //     this.handleFlameHit(aiPlayerComponent);\n            //     return;\n            case BulletType.ROCKET:\n                this.handleRocketHit(vehicleNode);\n                // 火箭弹由 handleRocketHit 方法负责销毁，这里直接返回\n                return;\n        }\n\n        // // 播放音效\n        // this.playHitSound();\n        \n        // // 销毁子弹（仅适用于普通子弹和火焰子弹）\n        // this.destroyBullet();\n    }\n\n    /**\n     * 处理普通子弹碰撞\n     */\n    private handleNormalBulletHit(playerComponent: player | null, aiPlayerComponent: AIPlayer | null) {\n        if (playerComponent) {\n            playerComponent.takeDamage(this.damage);\n        } else if (aiPlayerComponent) {\n            aiPlayerComponent.takeDamage(this.damage);\n        }\n    }\n\n    /**\n     * 处理子弹爆炸效果（普通子弹使用）\n     */\n    private handleBulletExplosion() {\n        // 设置爆炸标志\n        this._isExploding = true;\n        \n        // 停止移动\n        this.stopMovement();\n        \n        // 创建爆炸效果\n        this.createBulletExplosion();\n        \n        // 播放音效\n        SoundManager.instance.playSoundEffect('bulletHit');\n    }\n\n    /**\n     * 处理火箭弹碰撞\n     */\n    private handleRocketHit(hitVehicleNode: any) {\n        // 设置爆炸标志\n        this._isExploding = true;\n        \n        // 停止移动\n        this.stopMovement();\n        \n        // 创建爆炸效果\n        this.createRocketExplosion();\n\n        // 范围伤害\n        this.dealExplosionDamage();\n        \n        // 清除爆炸范围内的颜料\n        this.clearPaintInRange();\n        \n        // 播放音效\n        SoundManager.instance.playSoundEffect('explosion');\n    }\n\n    /**\n     * 处理火箭弹超时爆炸\n     */\n    private handleTimeoutExplosion() {\n        // 设置爆炸标志\n        this._isExploding = true;\n        \n        // 停止移动\n        this.stopMovement();\n        \n        // 创建爆炸效果\n        this.createRocketExplosion();\n\n        // 清除爆炸范围内的颜料\n        this.clearPaintInRange();\n\n        // 范围伤害\n        this.dealExplosionDamage();\n        \n        // 播放音效\n        SoundManager.instance.playSoundEffect('explosion');\n    }\n\n    /**\n     * 创建普通子弹爆炸效果\n     */\n    private createBulletExplosion() {\n        if (this.explosionPrefab) {\n            const explosion = instantiate(this.explosionPrefab);\n            // 将爆炸效果添加为子弹节点的子节点\n            this.node.addChild(explosion);\n            // 重置位置，使其与子弹节点重合\n            explosion.setPosition(Vec3.ZERO);\n\n            // 获取动画组件并播放动画\n            const animationComponent = explosion.getComponent(Animation);\n            if (animationComponent) {\n                // 播放动画并在0.3秒后销毁\n                animationComponent.play('explosion');\n                this.scheduleOnce(() => {\n                    if (explosion && explosion.isValid) {\n                        explosion.destroy();\n                    }\n                    this.destroyBullet();\n                }, 0.3);\n            } else {\n                // 如果没有动画组件，使用tween动画\n                tween(explosion)\n                    .to(0.3, { scale: new Vec3(1.5, 1.5, 1) })\n                    .delay(0.3)\n                    .call(() => {\n                        if (explosion && explosion.isValid) {\n                            explosion.destroy();\n                        }\n                        this.destroyBullet();\n                    })\n                    .start();\n            }\n        } else {\n            // 如果没有爆炸预制体，直接销毁子弹\n            this.destroyBullet();\n        }\n    }\n\n    /**\n     * 创建火箭弹爆炸效果\n     */\n    private createRocketExplosion() {\n        if (this.explosionPrefab) {\n            const explosion = instantiate(this.explosionPrefab);\n            // 将爆炸效果添加为子弹节点的子节点\n            this.node.addChild(explosion);\n            // 重置位置，使其与子弹节点重合\n            explosion.setPosition(Vec3.ZERO);\n\n            // 获取动画组件并播放动画\n            const animationComponent = explosion.getComponent(Animation);\n            if (animationComponent) {\n                // 播放动画并在0.5秒后销毁\n                animationComponent.play('explosion');\n                this.scheduleOnce(() => {\n                    if (explosion && explosion.isValid) {\n                        explosion.destroy();\n                    }\n                    this.destroyBullet();\n                }, 0.5);\n            } else {\n                // 如果没有动画组件，使用tween动画\n                tween(explosion)\n                    .to(0.5, { scale: new Vec3(2, 2, 1) })\n                    .delay(0.5)\n                    .call(() => {\n                        if (explosion && explosion.isValid) {\n                            explosion.destroy();\n                        }\n                        this.destroyBullet();\n                    })\n                    .start();\n            }\n        } else {\n            // 如果没有爆炸预制体，直接销毁子弹\n            this.destroyBullet();\n        }\n    }\n\n    /**\n     * 处理爆炸范围伤害\n     */\n    private dealExplosionDamage() {\n        // 获取场景中所有车辆\n        const allVehicles = this.getAllVehiclesInRange();\n        \n        allVehicles.forEach(vehicle => {\n            const distance = Vec2.distance(\n                new Vec2(this.node.worldPosition.x, this.node.worldPosition.y),\n                new Vec2(vehicle.node.worldPosition.x, vehicle.node.worldPosition.y)\n            );\n\n            if (distance <= this.explosionRadius) {\n                // 根据距离计算伤害衰减\n                const damageRatio = 1 - (distance / this.explosionRadius);\n                const actualDamage = this.damage * damageRatio;\n                \n                vehicle.takeDamage(actualDamage);\n            }\n        });\n    }\n\n    /**\n     * 清除爆炸范围内的颜料\n     */\n    private clearPaintInRange() {\n        // 获取GameManager单例\n        const gameManager = GameManager.getInstance();\n        if (!gameManager) {\n            console.warn('Bullet: 无法获取GameManager单例');\n            return;\n        }\n\n        // 通过GameManager获取PaintManager实例\n        const paintManager = gameManager.getPaintManager();\n        if (!paintManager) {\n            console.warn('Bullet: 无法获取PaintManager实例');\n            return;\n        }\n\n        // 获取爆炸中心位置\n        const explosionCenter = new Vec2(this.node.worldPosition.x, this.node.worldPosition.y);\n        \n        // 使用PaintManager的公共方法清除范围内的颜料\n        const removedCount = paintManager.clearPaintInRange(explosionCenter, this.explosionRadius);\n        \n        console.log(`火箭弹爆炸清除了 ${removedCount} 个颜料`);\n    }\n\n    /**\n     * 获取范围内的所有车辆\n     */\n    private getAllVehiclesInRange(): any[] {\n        const vehicles: any[] = [];\n        \n        // 查找所有玩家车辆\n        const playerNodes = this.node.scene?.getComponentsInChildren(player) || [];\n        playerNodes.forEach(p => {\n            if (this.getVehicleId(p.node) !== this._shooterId) {\n                vehicles.push(p);\n            }\n        });\n\n        // 查找所有AI车辆\n        const aiNodes = this.node.scene?.getComponentsInChildren(AIPlayer) || [];\n        aiNodes.forEach(ai => {\n            if (this.getVehicleId(ai.node) !== this._shooterId) {\n                vehicles.push(ai);\n            }\n        });\n\n        return vehicles;\n    }\n\n    /**\n     * 处理障碍物碰撞\n     */\n    private handleObstacleHit() {\n        if (this.bulletType === BulletType.ROCKET) {\n            // 火箭弹碰撞障碍物也会爆炸\n            this.handleRocketHit(null);\n            return;\n        }\n        \n        // 播放音效并销毁普通子弹\n        this.playHitSound();\n        this.destroyBullet();\n    }\n\n    /**\n     * 停止移动\n     */\n    private stopMovement() {\n        if (this._rigidBody) {\n            this._rigidBody.linearVelocity = Vec2.ZERO;\n            // 同时清空_velocity，防止其他地方误用\n            // this._velocity.set(0, 0);\n        }\n    }\n\n\n\n    /**\n     * 获取车辆ID\n     */\n    private getVehicleId(vehicleNode: any): string {\n        const playerComp = vehicleNode.getComponent(player);\n        const aiComp = vehicleNode.getComponent(AIPlayer);\n        \n        if (playerComp) {\n            return 'player';\n        } else if (aiComp) {\n            return aiComp.getVehicleId ? aiComp.getVehicleId() : 'ai_unknown';\n        }\n        \n        return 'unknown';\n    }\n\n    /**\n     * 播放碰撞音效\n     */\n    private playHitSound() {\n        switch (this.bulletType) {\n            case BulletType.NORMAL:\n                SoundManager.instance.playSoundEffect('bulletHit');\n                break;\n            // case BulletType.FLAME:\n            //     SoundManager.instance.playSoundEffect('flameHit');\n            //     break;\n            case BulletType.ROCKET:\n                SoundManager.instance.playSoundEffect('explosion');\n                break;\n        }\n    }\n\n    /**\n     * 销毁子弹\n     */\n    private destroyBullet() {\n        if (!this.node || !this.node.isValid) {\n            return;\n        }\n        if (this._pendingDestroy) {\n            return;\n        }\n        this._pendingDestroy = true;\n        // 不能在物理接触回调中直接销毁刚体/节点，延迟到本帧物理步之后\n        director.once(Director.EVENT_AFTER_PHYSICS, () => {\n            if (this.node && this.node.isValid) {\n                this.node.destroy();\n            }\n        });\n    }\n}\n"]}