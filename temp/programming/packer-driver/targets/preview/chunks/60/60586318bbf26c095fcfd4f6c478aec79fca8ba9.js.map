{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/GameOverPanel.ts"],"names":["_decorator","Component","Button","Label","GameManager","ccclass","property","GameOverPanel","type","tooltip","start","bindButtonEvents","updateGameStats","updatePaintRatios","restartButton","node","on","EventType","CLICK","onRestartClick","mainMenuButton","onMainMenuClick","gameManager","getInstance","gameTimeLabel","gameTime","getGameTime","string","toFixed","healthLabel","playerHP","getPlayerHP","maxHP","getPlayerMaxHP","healthPercentage","allRatios","getAllVehiclePaintRatios","playerRatio","playerPercentage","Math","round","playerRatioLabel","sortedRatios","getSortedVehiclePaintRatios","aiRatios","filter","item","vehicleId","aiLabels","ai1RatioLabel","ai2RatioLabel","ai3RatioLabel","ai4RatioLabel","forEach","ratioData","index","length","percentage","ratio","displayName","getAIDisplayName","i","startsWith","parts","split","restartGame","returnToMainMenu","setGameOverInfo","isVictory","performance","reward","titleLabel","performanceLabel","rewardLabel","onDestroy","off"],"mappings":"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","sourcesContent":["import { _decorator, Component, Button, Label } from 'cc';\nimport { GameManager } from './GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameOverPanel')\nexport class GameOverPanel extends Component {\n    @property(Label)\n    titleLabel: Label = null!; // 游戏结束标题\n\n    @property(Label)\n    performanceLabel: Label = null!; // 表现评价标签\n\n    @property(Label)\n    rewardLabel: Label = null!; // 奖励金币标签\n\n    @property(Label)\n    gameTimeLabel: Label = null!; // 游戏时长标签\n\n    @property(Label)\n    healthLabel: Label = null!; // 剩余生命值标签\n\n    // 玩家颜料占比显示\n    @property(Label)\n    playerRatioLabel: Label = null!;\n\n    // AI颜料占比显示标签（手动拖拽设置）\n    @property({\n        type: Label,\n        tooltip: 'AI车辆1的颜料占比显示标签'\n    })\n    ai1RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆2的颜料占比显示标签'\n    })\n    ai2RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆3的颜料占比显示标签'\n    })\n    ai3RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆4的颜料占比显示标签'\n    })\n    ai4RatioLabel: Label = null!;\n\n    @property(Button)\n    restartButton: Button = null!; // 重新开始按钮\n\n    @property(Button)\n    mainMenuButton: Button = null!; // 返回主菜单按钮\n\n    start() {\n        this.bindButtonEvents();\n        this.updateGameStats();\n        this.updatePaintRatios();\n    }\n\n    /**\n     * 绑定按钮事件\n     */\n    private bindButtonEvents() {\n        if (this.restartButton) {\n            this.restartButton.node.on(Button.EventType.CLICK, this.onRestartClick, this);\n        }\n\n        if (this.mainMenuButton) {\n            this.mainMenuButton.node.on(Button.EventType.CLICK, this.onMainMenuClick, this);\n        }\n    }\n\n    /**\n     * 更新游戏统计信息\n     */\n    private updateGameStats() {\n        const gameManager = GameManager.getInstance();\n        if (!gameManager) return;\n\n        // 更新游戏时长\n        if (this.gameTimeLabel) {\n            const gameTime = gameManager.getGameTime();\n            this.gameTimeLabel.string = `游戏时长: ${gameTime.toFixed(1)}秒`;\n        }\n\n        // 更新剩余生命值\n        if (this.healthLabel) {\n            const playerHP = gameManager.getPlayerHP();\n            const maxHP = gameManager.getPlayerMaxHP();\n            const healthPercentage = (playerHP / maxHP * 100).toFixed(1);\n            this.healthLabel.string = `剩余生命值: ${playerHP}/${maxHP} (${healthPercentage}%)`;\n        }\n    }\n\n    /**\n     * 更新颜料占比显示\n     */\n    private updatePaintRatios(): void {\n        const gameManager = GameManager.getInstance();\n        if (!gameManager) return;\n\n        // 获取所有车辆的颜料占比\n        const allRatios = gameManager.getAllVehiclePaintRatios();\n\n        // 更新玩家占比\n        const playerRatio = allRatios['player'] || 0;\n        const playerPercentage = Math.round(playerRatio * 100);\n        if (this.playerRatioLabel) {\n            this.playerRatioLabel.string = `玩家: ${playerPercentage}%`;\n        }\n\n        // 获取排序后的AI占比数据\n        const sortedRatios = gameManager.getSortedVehiclePaintRatios();\n        const aiRatios = sortedRatios.filter(item => item.vehicleId !== 'player');\n\n        // 获取AI标签数组\n        const aiLabels = [this.ai1RatioLabel, this.ai2RatioLabel, this.ai3RatioLabel, this.ai4RatioLabel];\n\n        // 更新每个AI的显示\n        aiRatios.forEach((ratioData, index) => {\n            if (index < aiLabels.length && aiLabels[index]) {\n                const percentage = Math.round(ratioData.ratio * 100);\n                const displayName = this.getAIDisplayName(ratioData.vehicleId);\n                aiLabels[index].string = `${displayName}: ${percentage}%`;\n            }\n        });\n\n        // 清空未使用的标签\n        for (let i = aiRatios.length; i < aiLabels.length; i++) {\n            if (aiLabels[i]) {\n                aiLabels[i].string = '';\n            }\n        }\n    }\n\n    /**\n     * 获取AI的显示名称\n     * @param vehicleId AI车辆ID\n     * @returns 显示名称\n     */\n    private getAIDisplayName(vehicleId: string): string {\n        // 从vehicleId中提取简化的显示名称\n        if (vehicleId.startsWith('ai_')) {\n            const parts = vehicleId.split('_');\n            if (parts.length >= 2) {\n                return `AI-${parts[1]}`;\n            }\n        }\n        return vehicleId;\n    }\n\n    /**\n     * 重新开始按钮点击\n     */\n    private onRestartClick() {\n        const gameManager = GameManager.getInstance();\n        if (gameManager) {\n            gameManager.restartGame();\n        }\n    }\n\n    /**\n     * 返回主菜单按钮点击\n     */\n    private onMainMenuClick() {\n        const gameManager = GameManager.getInstance();\n        if (gameManager) {\n            gameManager.returnToMainMenu();\n        }\n    }\n\n    /**\n     * 设置游戏结束信息\n     */\n    public setGameOverInfo(isVictory: boolean, performance: string, reward: number) {\n        if (this.titleLabel) {\n            this.titleLabel.string = isVictory ? '胜利！' : '失败！';\n        }\n\n        if (this.performanceLabel) {\n            this.performanceLabel.string = `表现评价: ${performance}`;\n        }\n\n        if (this.rewardLabel) {\n            this.rewardLabel.string = `获得金币: ${reward}`;\n        }\n    }\n\n    onDestroy() {\n        // 清理事件监听\n        if (this.restartButton) {\n            this.restartButton.node.off(Button.EventType.CLICK, this.onRestartClick, this);\n        }\n        if (this.mainMenuButton) {\n            this.mainMenuButton.node.off(Button.EventType.CLICK, this.onMainMenuClick, this);\n        }\n    }\n}\n"]}