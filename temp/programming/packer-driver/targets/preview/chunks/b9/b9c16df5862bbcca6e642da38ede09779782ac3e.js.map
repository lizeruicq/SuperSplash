{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/SelectManager.ts"],"names":["_decorator","Component","Button","ToggleContainer","Sprite","Color","Label","Node","TempData","PlayerManager","SceneTransition","PurchasePanel","ccclass","property","SelectManager","type","tooltip","carPrices","insufficientMoneyTimer","pendingCarId","onLoad","updateLevelToggles","updateCarToggles","setupCarPurchaseButtons","insufficientMoneyLabel","node","active","playerManager","instance","console","log","levelToggleGroup","toggleItems","forEach","toggle","levelId","name","isUnlocked","isLevelUnlocked","interactable","sprite","getComponent","lock","getChildByName","color","WHITE","BLACK","updateLevelGradeDisplay","levelNode","gradeText","getLevelGradeText","gradeLabel","getComponentInChildren","label","string","progress","getLevelProgress","colorHex","getLevelGradeColor","grade","hexToColor","hex","r","parseInt","slice","g","b","unlockedCars","playerData","carToggleGroup","carId","indexOf","updateCarPurchaseButton","start","startButton","on","EventType","CLICK","onStartGame","levelToggle","find","t","isChecked","carToggle","selectedLevel","selectedCar","loadScene","carNode","purchaseButton","undefined","button","off","showPurchasePanel","price","purchasePanelNode","error","purchasePanel","show","purchasePrice","processPurchase","money","spendMoney","unlockCar","savePlayerData","showInsufficientMoneyMessage","update","deltaTime","getCarPrice","setCarPrice"],"mappings":"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","sourcesContent":["import { _decorator, Component, Button, ToggleContainer, Toggle, Sprite, Color, Label, Node, find, instantiate } from 'cc';\nimport { TempData } from './TempData';\nimport { PlayerManager } from './PlayerManager';\nimport { SceneTransition } from './SceneTransition';\n// @ts-ignore\nconst { ccclass, property } = _decorator;\n\n// 添加PurchasePanel引用\nimport { PurchasePanel } from './PurchasePanel';\n\n// 车辆价格配置\ninterface CarPriceConfig {\n    [carId: string]: number;\n}\n\n@ccclass('SelectManager')\nexport class SelectManager extends Component {\n    @property(ToggleContainer)\n    levelToggleGroup: ToggleContainer = null!;\n\n    @property(ToggleContainer)\n    carToggleGroup: ToggleContainer = null!;\n\n    @property(Button)\n    startButton: Button = null!;\n\n    @property(Label)\n    insufficientMoneyLabel: Label = null!; // 金币不足提示标签\n\n    // 购买面板相关属性\n    @property({\n        type: Node,\n        tooltip: '场景中的购买面板节点',\n    })\n    private purchasePanelNode: Node = null!;\n\n    // 车辆价格配置\n    private carPrices: CarPriceConfig = {\n        'car-1': 0,      // 默认车辆免费\n        'car-2': 500,    // 第二辆车500金币\n        'car-3': 1000,   // 第三辆车1000金币\n        'car-4': 1500,   // 第四辆车1500金币\n        'car-5': 2000,   // 第五辆车2000金币\n    };\n\n    private insufficientMoneyTimer: number = 0; // 金币不足提示计时器\n    private pendingCarId: string = null!;\n\n    onLoad() {\n        this.updateLevelToggles();\n        this.updateCarToggles();\n        this.setupCarPurchaseButtons();\n\n        // 隐藏金币不足提示\n        if (this.insufficientMoneyLabel) {\n            this.insufficientMoneyLabel.node.active = false;\n        }\n    }\n\n    updateLevelToggles() {\n        const playerManager = PlayerManager.instance;\n        console.log('更新关卡显示');\n\n        this.levelToggleGroup.toggleItems.forEach((toggle: Toggle) => {\n            const levelId = toggle.node.name;\n            const isUnlocked = playerManager.isLevelUnlocked(levelId);\n\n            console.log(`关卡 ${levelId}: 解锁状态 = ${isUnlocked}`);\n\n            // 设置交互性和颜色\n            toggle.interactable = isUnlocked;\n            const sprite = toggle.node.getComponent(Sprite);\n            const lock = toggle.node.getChildByName('lock');\n\n            if (sprite) {\n                sprite.color = isUnlocked ? Color.WHITE : Color.BLACK;\n            }\n            if (lock) {\n                lock.active = !isUnlocked;\n            }\n\n            // 更新评级显示\n            this.updateLevelGradeDisplay(toggle.node, levelId);\n        });\n    }\n\n    /**\n     * 更新关卡评级显示\n     */\n    updateLevelGradeDisplay(levelNode: Node, levelId: string) {\n        const playerManager = PlayerManager.instance;\n        const gradeText = playerManager.getLevelGradeText(levelId);\n\n        // 查找或创建评级标签\n        let gradeLabel = levelNode.getChildByName('GradeLabel');\n        if (!gradeLabel) {\n            // 如果没有评级标签节点，尝试查找现有的Label子节点\n            gradeLabel = levelNode.getComponentInChildren(Label)?.node;\n        }\n\n        if (gradeLabel) {\n            const label = gradeLabel.getComponent(Label);\n            if (label) {\n                if (gradeText) {\n                    label.string = gradeText;\n                    label.node.active = true;\n\n                    // 设置评级颜色\n                    const progress = playerManager.getLevelProgress(levelId);\n                    if (progress) {\n                        const colorHex = playerManager.getLevelGradeColor(progress.grade);\n                        label.color = this.hexToColor(colorHex);\n                    }\n                } else {\n                    label.string = '';\n                    label.node.active = false;\n                }\n            }\n        }\n    }\n\n    /**\n     * 将十六进制颜色转换为Cocos Color\n     */\n    private hexToColor(hex: string): Color {\n        const r = parseInt(hex.slice(1, 3), 16);\n        const g = parseInt(hex.slice(3, 5), 16);\n        const b = parseInt(hex.slice(5, 7), 16);\n        return new Color(r, g, b, 255);\n    }\n\n    updateCarToggles() {\n        const unlockedCars = PlayerManager.instance.playerData.unlockedCars;\n        this.carToggleGroup.toggleItems.forEach((toggle: Toggle) => {\n            const carId = toggle.node.name;\n            const isUnlocked = unlockedCars.indexOf(carId) !== -1;\n\n            // 设置车辆图标的交互性和颜色\n            toggle.interactable = isUnlocked;\n            const sprite = toggle.node.getComponent(Sprite);\n            if (sprite) {\n                sprite.color = isUnlocked ? Color.WHITE : Color.BLACK;\n            }\n\n            // 处理购买按钮的显示\n            this.updateCarPurchaseButton(toggle.node, carId, isUnlocked);\n        });\n    }\n\n    start() {\n        if (this.startButton) {\n            this.startButton.node.on(Button.EventType.CLICK, this.onStartGame, this);\n        }\n    }\n\n    onStartGame() {\n        // 获取当前选中的level\n        const levelToggle = this.levelToggleGroup.toggleItems.find((t: any) => t.isChecked);\n        // 获取当前选中的car\n        const carToggle = this.carToggleGroup.toggleItems.find((t: any) => t.isChecked);\n\n        if (!levelToggle || !carToggle) {\n            // 你可以在这里弹窗提示\"请选择关卡和车辆\"\n            return;\n        }\n\n        // 记录选择到TempData\n        TempData.selectedLevel = levelToggle.node.name;\n        TempData.selectedCar = carToggle.node.name;\n\n        console.log(levelToggle.node.name,carToggle.node.name)\n\n        // 切换到游戏场景\n        SceneTransition.loadScene('gamescene');\n    }\n\n\n\n    /**\n     * 设置车辆购买按钮\n     */\n    setupCarPurchaseButtons() {\n        this.carToggleGroup.toggleItems.forEach((toggle: Toggle) => {\n            const carId = toggle.node.name;\n            const isUnlocked = PlayerManager.instance.playerData.unlockedCars.indexOf(carId) !== -1;\n            this.updateCarPurchaseButton(toggle.node, carId, isUnlocked);\n        });\n    }\n\n    /**\n     * 更新单个车辆的购买按钮\n     */\n    updateCarPurchaseButton(carNode: Node, carId: string, isUnlocked: boolean) {\n        // 查找或创建购买按钮\n        let purchaseButton = carNode.getChildByName('PurchaseButton');\n\n        if (!isUnlocked && this.carPrices[carId] !== undefined) {\n            // 车辆未解锁且有价格配置，显示购买按钮\n            if (!purchaseButton) {\n                // 创建购买按钮（这里假设场景中已经有购买按钮节点）\n                purchaseButton = carNode.getChildByName('PurchaseButton');\n            }\n\n            if (purchaseButton) {\n                purchaseButton.active = true;\n\n                // 设置按钮文本\n                // const buttonLabel = purchaseButton.getChildByName('Label')?.getComponent(Label);\n                // if (buttonLabel) {\n                //     buttonLabel.string = `购买 ${this.carPrices[carId]}`;\n                // }\n\n                // 绑定点击事件\n                const button = purchaseButton.getComponent(Button);\n                if (button) {\n                    button.node.off(Button.EventType.CLICK);\n                    button.node.on(Button.EventType.CLICK, () => {\n                        this.pendingCarId = carId;\n                        this.showPurchasePanel(this.carPrices[carId]);\n                    }, this);\n                }\n            }\n        } else {\n            // 车辆已解锁或免费，隐藏购买按钮\n            if (purchaseButton) {\n                purchaseButton.active = false;\n            }\n        }\n    }\n\n    /**\n     * 显示购买面板\n     */\n    private showPurchasePanel(price: number) {\n        if (!this.purchasePanelNode) {\n            console.error('购买面板节点未配置');\n            return;\n        }\n\n        const purchasePanel = this.purchasePanelNode.getComponent<PurchasePanel>(PurchasePanel);\n        if (!purchasePanel) {\n            console.error('购买面板组件未找到');\n            return;\n        }\n\n        // 确保面板在最上层\n        // this.purchasePanelNode.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n\n        // 显示面板\n        purchasePanel.show(price, (purchasePrice) => {\n            // 确认购买后的回调\n            this.processPurchase(purchasePrice);\n        });\n    }\n\n    /**\n     * 处理实际购买逻辑\n     */\n    private processPurchase(price: number) {\n        if (!this.pendingCarId) {\n            return;\n        }\n\n        const carId = this.pendingCarId;\n        const playerManager = PlayerManager.instance;\n\n        // 检查玩家金币是否足够（再次检查，因为用户可能在面板显示期间改变了金币）\n        if (playerManager.playerData.money >= price) {\n            // 扣除金币并解锁车辆\n            if (playerManager.spendMoney(price)) {\n                playerManager.unlockCar(carId);\n\n                console.log(`成功购买车辆 ${carId}，花费 ${price} 金币`);\n\n                // 更新UI显示\n                this.updateCarToggles();\n\n                // 保存数据\n                playerManager.savePlayerData();\n            }\n        } else {\n            // 金币不足，显示提示\n            this.showInsufficientMoneyMessage();\n        }\n\n        // 重置待购买车辆ID\n        this.pendingCarId = null;\n    }\n\n    /**\n     * 购买车辆\n     */\n    // onPurchaseCar(carId: string) {\n    //     const price = this.carPrices[carId];\n    //     if (price === undefined) {\n    //         console.warn(`车辆 ${carId} 没有配置价格`);\n    //         return;\n    //     }\n\n    //     const playerManager = PlayerManager.instance;\n    //     if (!playerManager) {\n    //         console.error('PlayerManager 实例不存在');\n    //         return;\n    //     }\n\n    //     // 检查玩家金币是否足够\n    //     if (playerManager.playerData.money >= price) {\n    //         // 扣除金币并解锁车辆\n    //         if (playerManager.spendMoney(price)) {\n    //             playerManager.unlockCar(carId);\n\n    //             console.log(`成功购买车辆 ${carId}，花费 ${price} 金币`);\n\n    //             // 更新UI显示\n    //             this.updateCarToggles();\n\n    //             // 保存数据\n    //             playerManager.savePlayerData();\n    //         }\n    //     } else {\n    //         // 金币不足，显示提示\n    //         this.showInsufficientMoneyMessage();\n    //     }\n    // }\n\n    /**\n     * 显示金币不足提示\n     */\n    showInsufficientMoneyMessage() {\n        if (this.insufficientMoneyLabel) {\n            this.insufficientMoneyLabel.string = '金币不足！';\n            this.insufficientMoneyLabel.node.active = true;\n            this.insufficientMoneyTimer = 3.0; // 3秒后隐藏\n        }\n    }\n\n    /**\n     * 更新方法，处理金币不足提示的计时\n     */\n    update(deltaTime: number) {\n        if (this.insufficientMoneyTimer > 0) {\n            this.insufficientMoneyTimer -= deltaTime;\n            if (this.insufficientMoneyTimer <= 0) {\n                if (this.insufficientMoneyLabel) {\n                    this.insufficientMoneyLabel.node.active = false;\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取车辆价格\n     */\n    getCarPrice(carId: string): number {\n        return this.carPrices[carId] || 0;\n    }\n\n    /**\n     * 设置车辆价格\n     */\n    setCarPrice(carId: string, price: number) {\n        this.carPrices[carId] = price;\n    }\n}\n\n"]}