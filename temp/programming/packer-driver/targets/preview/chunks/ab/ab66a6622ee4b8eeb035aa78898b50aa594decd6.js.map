{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/SoundManager.ts"],"names":["_decorator","Component","AudioClip","AudioSource","director","sys","resources","ccclass","property","SoundManager","instance","_instance","onLoad","destroy","addPersistRootNode","node","bgmAudioSource","addComponent","effectAudioSource","loadState","start","playBGM","name","path","load","err","clip","console","warn","loop","play","log","playSoundEffect","playOneShot","toggleAudio","isMuted","volume","saveState","localStorage","setItem","muted","getItem"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AudioClip, AudioSource, director, sys, resources } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SoundManager')\nexport class SoundManager extends Component {\n    @property(AudioSource)\n    private bgmAudioSource: AudioSource = null!;\n    @property(AudioSource)\n    private effectAudioSource: AudioSource = null!;\n\n    private static _instance: SoundManager = null!;\n\n    public static get instance(): SoundManager {\n        return this._instance;\n    }\n\n    onLoad() {\n        if (SoundManager._instance) {\n            this.destroy();\n            return;\n        }\n        SoundManager._instance = this;\n        director.addPersistRootNode(this.node);\n\n        this.bgmAudioSource = this.node.addComponent(AudioSource);\n        this.effectAudioSource = this.node.addComponent(AudioSource);\n        this.loadState();\n    }\n\n    start() {\n        this.playBGM('bgm'); // 默认播放的BGM，请确保resources/sound目录下有bgm.mp3/wav等格式文件\n    }\n\n    playBGM(name: string) {\n        const path = `sound/${name}`;\n        resources.load(path, AudioClip, (err, clip) => {\n            if (err) {\n                console.warn(`Failed to load BGM: ${path}`, err);\n                return;\n            }\n            this.bgmAudioSource.clip = clip;\n            this.bgmAudioSource.loop = true;\n            this.bgmAudioSource.play();\n            console.log(`Playing BGM: ${path}`);\n        });\n    }\n\n    playSoundEffect(name: string) {\n        const path = `sound/${name}`;\n        resources.load(path, AudioClip, (err, clip) => {\n            if (err) {\n                console.warn(`Failed to load sound effect: ${path}`, err);\n                return;\n            }\n            this.effectAudioSource.playOneShot(clip);\n        });\n    }\n\n    toggleAudio() {\n        const isMuted = this.isMuted();\n        this.bgmAudioSource.volume = isMuted ? 1 : 0;\n        this.effectAudioSource.volume = isMuted ? 1 : 0;\n        this.saveState();\n    }\n\n    isMuted(): boolean {\n        return this.bgmAudioSource.volume === 0;\n    }\n\n    saveState() {\n        sys.localStorage.setItem('soundMuted', this.isMuted() ? '1' : '0');\n    }\n\n    loadState() {\n        const muted = sys.localStorage.getItem('soundMuted');\n        const isMuted = muted === '0';\n        this.bgmAudioSource.volume = isMuted ? 0 : 1;\n        this.effectAudioSource.volume = isMuted ? 0 : 1;\n    }\n}"]}