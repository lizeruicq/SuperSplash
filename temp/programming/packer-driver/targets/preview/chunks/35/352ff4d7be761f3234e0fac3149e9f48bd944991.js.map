{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/TopRacing/assets/scripts/HealthBar.ts"],"names":["_decorator","Component","ProgressBar","Vec3","Camera","UITransform","ccclass","property","HealthBar","currentHealth","targetNode","camera","canvas","start","setHealth","maxHealth","useCameraConversion","setupCameraConversion","setupDirectFollow","node","scene","getComponentInChildren","console","error","getChildByName","log","setTarget","target","health","Math","max","min","progressBar","progress","takeDamage","damage","heal","amount","getHealth","isDead","update","updateWithCameraConversion","updateWithDirectFollow","worldPos","worldPosition","screenPos","worldToScreen","canvasTransform","getComponent","localPos","convertToNodeSpaceAR","x","y","setPosition","offsetY","setRotationFromEuler","targetPos","setWorldPosition","z","setVisible","visible","active","destroyHealthBar","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, ProgressBar, Label, Vec3, Camera, UITransform, view } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('HealthBar')\nexport class HealthBar extends Component {\n    @property(ProgressBar)\n    progressBar: ProgressBar = null!;\n\n    // @property(Label)\n    // healthLabel: Label = null!;\n\n    @property\n    maxHealth: number = 100;\n\n    @property\n    offsetY: number = 50; // 血条在车辆上方的偏移距离\n\n    @property\n    useCameraConversion: boolean = true; // 是否使用相机坐标转换\n\n    private currentHealth: number = 100;\n    private targetNode: Node = null!;\n    private camera: Camera = null!;\n    private canvas: Node = null!;\n\n    start() {\n        // 初始化血条\n        this.setHealth(this.maxHealth);\n\n        if (this.useCameraConversion) {\n            // 方式1：使用相机坐标转换（推荐）\n            // 为什么需要相机坐标？\n            // 1. AI车辆使用世界坐标，UI血条使用屏幕坐标\n            // 2. 当相机移动/旋转时，车辆在屏幕上的位置会变化\n            // 3. 需要将车辆的世界坐标转换为屏幕坐标，再转换为UI坐标\n            this.setupCameraConversion();\n        } else {\n            // 方式2：直接跟随节点（简单但有限制）\n            this.setupDirectFollow();\n        }\n    }\n\n    /**\n     * 设置相机坐标转换模式\n     */\n    private setupCameraConversion() {\n        // 获取主相机\n        this.camera = this.node.scene.getComponentInChildren(Camera);\n        if (!this.camera) {\n            console.error('未找到相机组件，血条可能无法正确显示');\n            return;\n        }\n\n        // 获取Canvas节点\n        this.canvas = this.node.scene.getChildByName('Canvas');\n        if (!this.canvas) {\n            console.error('未找到Canvas节点，血条可能无法正确显示');\n            return;\n        }\n\n        console.log('血条使用相机坐标转换模式');\n    }\n\n    /**\n     * 设置直接跟随模式\n     */\n    private setupDirectFollow() {\n        console.log('血条使用直接跟随模式（仅适用于固定相机）');\n    }\n\n    /**\n     * 设置血条跟随的目标节点\n     */\n    public setTarget(target: Node) {\n        this.targetNode = target;\n    }\n\n    /**\n     * 设置当前生命值\n     */\n    public setHealth(health: number) {\n        this.currentHealth = Math.max(0, Math.min(health, this.maxHealth));\n        \n        // 更新进度条\n        if (this.progressBar) {\n            this.progressBar.progress = this.currentHealth / this.maxHealth;\n        }\n        \n        // // 更新文本\n        // if (this.healthLabel) {\n        //     this.healthLabel.string = `${this.currentHealth}/${this.maxHealth}`;\n        // }\n    }\n\n    /**\n     * 减少生命值\n     */\n    public takeDamage(damage: number) {\n        this.setHealth(this.currentHealth - damage);\n    }\n\n    /**\n     * 恢复生命值\n     */\n    public heal(amount: number) {\n        this.setHealth(this.currentHealth + amount);\n    }\n\n    /**\n     * 获取当前生命值\n     */\n    public getHealth(): number {\n        return this.currentHealth;\n    }\n\n    /**\n     * 检查是否死亡\n     */\n    public isDead(): boolean {\n        return this.currentHealth <= 0;\n    }\n\n    update() {\n        if (!this.targetNode) {\n            return;\n        }\n\n        if (this.useCameraConversion) {\n            this.updateWithCameraConversion();\n        } else {\n            this.updateWithDirectFollow();\n        }\n    }\n\n    /**\n     * 使用相机坐标转换更新位置（推荐方式）\n     * \n     * 为什么在这种情况下仍然需要相机坐标转换？\n     * \n     * 场景分析：\n     * - 摄像头跟随玩家车辆移动\n     * - AI车辆在游戏世界中固定位置移动\n     * - 血条需要显示在AI车辆上方\n     * \n     * 问题：\n     * 1. 当摄像头跟随玩家移动时，AI车辆在屏幕上的显示位置会发生变化\n     * 2. 虽然AI车辆的世界坐标没有改变，但它在屏幕上的投影位置改变了\n     * 3. 血条是UI元素，使用屏幕坐标，需要知道AI车辆在屏幕上的实际位置\n     * \n     * 举例：\n     * - AI车辆世界坐标：(100, 200, 0) - 不变\n     * - 玩家向右移动，摄像头跟随\n     * - AI车辆在屏幕上的位置：从屏幕中心变为屏幕左侧\n     * - 血条需要跟随AI车辆在屏幕上的新位置\n     * \n     * 解决方案：\n     * 使用相机坐标转换，将AI车辆的世界坐标转换为屏幕坐标\n     */\n    private updateWithCameraConversion() {\n        if (!this.camera || !this.canvas) {\n            return;\n        }\n\n        // 步骤1：将AI车辆的世界坐标转换为屏幕坐标\n        // 这一步是关键：即使AI车辆世界坐标不变，屏幕坐标也会因为相机移动而变化\n        const worldPos = this.targetNode.worldPosition;\n        const screenPos = this.camera.worldToScreen(worldPos);\n        \n        // 步骤2：将屏幕坐标转换为Canvas的本地坐标\n        const canvasTransform = this.canvas.getComponent(UITransform);\n        if (!canvasTransform) {\n            return;\n        }\n        \n        const localPos = canvasTransform.convertToNodeSpaceAR(new Vec3(screenPos.x, screenPos.y, 0));\n        \n        // 步骤3：设置血条位置（在AI车辆上方）\n        this.node.setPosition(localPos.x, localPos.y + this.offsetY, 0);\n        \n        // 步骤4：确保血条始终面向屏幕（不随AI车辆旋转）\n        this.node.setRotationFromEuler(0, 0, 0);\n    }\n\n    /**\n     * 使用直接跟随更新位置（简单方式）\n     */\n    private updateWithDirectFollow() {\n        // 直接使用目标节点的位置，加上偏移\n        const targetPos = this.targetNode.worldPosition;\n        this.node.setWorldPosition(targetPos.x, targetPos.y + this.offsetY, targetPos.z);\n        \n        // 血条不旋转\n        this.node.setRotationFromEuler(0, 0, 0);\n    }\n\n    /**\n     * 显示或隐藏血条\n     */\n    public setVisible(visible: boolean) {\n        this.node.active = visible;\n    }\n\n    /**\n     * 销毁血条\n     */\n    public destroyHealthBar() {\n        this.node.destroy();\n    }\n} "]}