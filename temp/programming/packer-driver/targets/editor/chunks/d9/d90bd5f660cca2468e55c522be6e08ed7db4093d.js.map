{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/Bullet.ts"],"names":["_decorator","Component","Vec2","RigidBody2D","Contact2DType","Collider2D","Enum","instantiate","Prefab","tween","Vec3","player","AIPlayer","SoundManager","ccclass","property","WeaponType","BulletType","Bullet","type","tooltip","_shooterId","_rigidBody","_direction","_velocity","_timer","onLoad","getComponent","console","error","collider","on","BEGIN_CONTACT","onBeginContact","start","update","deltaTime","lifeTime","destroyBullet","set","x","speed","y","linearVelocity","init","direction","shooterId","normalize","angle","Math","atan2","PI","node","setRotationFromEuler","selfCollider","otherCollider","contact","otherNode","otherVehicleId","getVehicleId","playerComponent","aiPlayerComponent","handleVehicleHit","handleObstacleHit","vehicleNode","bulletType","NORMAL","handleNormalBulletHit","FLAME","handleFlameHit","ROCKET","handleRocketHit","playHitSound","takeDamage","damage","damagePerTick","tickInterval","flameDuration","i","scheduleOnce","isValid","hitVehicleNode","explosionPrefab","explosion","setWorldPosition","worldPosition","parent","addChild","to","scale","call","destroy","dealExplosionDamage","allVehicles","getAllVehiclesInRange","forEach","vehicle","distance","explosionRadius","damageRatio","actualDamage","vehicles","playerNodes","scene","getComponentsInChildren","p","push","aiNodes","ai","playerComp","aiComp","instance","playSoundEffect"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec2, RigidBody2D, Contact2DType, IPhysics2DContact, Collider2D, Enum, instantiate, Prefab, tween, Vec3 } from 'cc';\nimport { player } from './player';\nimport { AIPlayer } from './AIPlayer';\nimport { SoundManager } from './SoundManager';\n\nconst { ccclass, property } = _decorator;\n\n// 定义武器类型枚举\nexport enum WeaponType {\n    NORMAL = 0,  // 普通子弹\n    FLAME = 1,   // 火焰喷射\n    ROCKET = 2   // 火箭弹\n}\n\n// 定义子弹类型枚举\nexport enum BulletType {\n    NORMAL = 0,  // 普通子弹\n    FLAME = 1,   // 火焰\n    ROCKET = 2   // 火箭弹\n}\n\n// 将枚举注册到Cocos Creator中\nEnum(WeaponType);\nEnum(BulletType);\n\n@ccclass('Bullet')\nexport class Bullet extends Component {\n    @property\n    speed: number = 50; // 子弹速度\n\n    @property\n    damage: number = 5; // 伤害值\n\n    @property({\n        type: BulletType,\n        tooltip: \"子弹类型\"\n    })\n    bulletType: BulletType = BulletType.NORMAL;\n\n    @property({\n        tooltip: \"子弹存活时间（秒）\"\n    })\n    lifeTime: number = 3.0;\n\n    @property({\n        type: Prefab,\n        tooltip: \"爆炸效果预制体（火箭弹专用）\"\n    })\n    explosionPrefab: Prefab = null!;\n\n    @property({\n        tooltip: \"爆炸范围（火箭弹专用）\"\n    })\n    explosionRadius: number = 100;\n\n    @property({\n        tooltip: \"火焰持续时间（火焰专用）\"\n    })\n    flameDuration: number = 1.0;\n\n    private _shooterId: string = ''; // 发射者ID\n    private _rigidBody: RigidBody2D = null!;\n    private _direction: Vec2 = new Vec2(0, 1); // 默认向上\n    private _velocity: Vec2 = new Vec2(0, 0);\n    private _timer: number = 0;\n\n    onLoad() {\n        this._rigidBody = this.getComponent(RigidBody2D);\n        if (!this._rigidBody) {\n            console.error('Bullet: RigidBody2D组件未找到');\n        }\n\n        // 注册碰撞回调\n        const collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n\n    start() {\n        // // 根据子弹类型调整属性\n        // this.adjustBulletProperties();\n    }\n\n    update(deltaTime: number) {\n        this._timer += deltaTime;\n\n        // 检查是否超过存活时间\n        if (this._timer >= this.lifeTime) {\n            this.destroyBullet();\n            return;\n        }\n\n        // 更新位置\n        if (this._rigidBody) {\n            this._velocity.set(this._direction.x * this.speed, this._direction.y * this.speed);\n            this._rigidBody.linearVelocity = this._velocity;\n        }\n    }\n\n    /**\n     * 初始化子弹\n     * @param direction 子弹方向\n     * @param shooterId 发射者ID\n     */\n    public init(direction: Vec2, shooterId: string) {\n        this._direction = direction.normalize();\n        this._shooterId = shooterId;\n\n        // 设置初始旋转角度\n        const angle = Math.atan2(direction.y, direction.x) * 180 / Math.PI;\n        this.node.setRotationFromEuler(0, 0, angle - 90);\n    }\n\n    /**\n     * 碰撞回调\n     */\n    private onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact) {\n        const otherNode = otherCollider.node;\n        \n        // 不与发射者碰撞\n        const otherVehicleId = this.getVehicleId(otherNode);\n        if (otherVehicleId === this._shooterId) {\n            return;\n        }\n\n        // 检查是否碰撞到车辆\n        const playerComponent = otherNode.getComponent(player);\n        const aiPlayerComponent = otherNode.getComponent(AIPlayer);\n\n        if (playerComponent || aiPlayerComponent) {\n            this.handleVehicleHit(otherNode, playerComponent, aiPlayerComponent);\n        } else {\n            // 碰撞到其他物体（如墙壁）\n            this.handleObstacleHit();\n        }\n    }\n\n    /**\n     * 处理车辆碰撞\n     */\n    private handleVehicleHit(vehicleNode: any, playerComponent: player | null, aiPlayerComponent: AIPlayer | null) {\n        switch (this.bulletType) {\n            case BulletType.NORMAL:\n                this.handleNormalBulletHit(playerComponent, aiPlayerComponent);\n                break;\n            case BulletType.FLAME:\n                this.handleFlameHit(vehicleNode, playerComponent, aiPlayerComponent);\n                break;\n            case BulletType.ROCKET:\n                this.handleRocketHit(vehicleNode);\n                break;\n        }\n\n        // 播放音效\n        this.playHitSound();\n        \n        // 销毁子弹\n        this.destroyBullet();\n    }\n\n    /**\n     * 处理普通子弹碰撞\n     */\n    private handleNormalBulletHit(playerComponent: player | null, aiPlayerComponent: AIPlayer | null) {\n        if (playerComponent) {\n            playerComponent.takeDamage(this.damage);\n        } else if (aiPlayerComponent) {\n            aiPlayerComponent.takeDamage(this.damage);\n        }\n    }\n\n    /**\n     * 处理火焰碰撞\n     */\n    private handleFlameHit(vehicleNode: any, playerComponent: player | null, aiPlayerComponent: AIPlayer | null) {\n        // 火焰造成持续伤害\n        const damagePerTick = this.damage / 5; // 分5次造成伤害\n        const tickInterval = this.flameDuration / 5;\n\n        for (let i = 0; i < 5; i++) {\n            this.scheduleOnce(() => {\n                if (vehicleNode && vehicleNode.isValid) {\n                    if (playerComponent && playerComponent.isValid) {\n                        playerComponent.takeDamage(damagePerTick);\n                    } else if (aiPlayerComponent && aiPlayerComponent.isValid) {\n                        aiPlayerComponent.takeDamage(damagePerTick);\n                    }\n                }\n            }, tickInterval * i);\n        }\n    }\n\n    /**\n     * 处理火箭弹碰撞\n     */\n    private handleRocketHit(hitVehicleNode: any) {\n        // 创建爆炸效果\n        if (this.explosionPrefab) {\n            const explosion = instantiate(this.explosionPrefab);\n            explosion.setWorldPosition(this.node.worldPosition);\n            this.node.parent?.addChild(explosion);\n\n            // 爆炸动画\n            tween(explosion)\n                .to(0.5, { scale: new Vec3(2, 2, 1) })\n                .call(() => {\n                    if (explosion && explosion.isValid) {\n                        explosion.destroy();\n                    }\n                })\n                .start();\n        }\n\n        // 范围伤害\n        this.dealExplosionDamage();\n    }\n\n    /**\n     * 处理爆炸范围伤害\n     */\n    private dealExplosionDamage() {\n        // 获取场景中所有车辆\n        const allVehicles = this.getAllVehiclesInRange();\n        \n        allVehicles.forEach(vehicle => {\n            const distance = Vec2.distance(\n                new Vec2(this.node.worldPosition.x, this.node.worldPosition.y),\n                new Vec2(vehicle.node.worldPosition.x, vehicle.node.worldPosition.y)\n            );\n\n            if (distance <= this.explosionRadius) {\n                // 根据距离计算伤害衰减\n                const damageRatio = 1 - (distance / this.explosionRadius);\n                const actualDamage = this.damage * damageRatio;\n                \n                vehicle.takeDamage(actualDamage);\n            }\n        });\n    }\n\n    /**\n     * 获取范围内的所有车辆\n     */\n    private getAllVehiclesInRange(): any[] {\n        const vehicles: any[] = [];\n        \n        // 查找所有玩家车辆\n        const playerNodes = this.node.scene?.getComponentsInChildren(player) || [];\n        playerNodes.forEach(p => {\n            if (this.getVehicleId(p.node) !== this._shooterId) {\n                vehicles.push(p);\n            }\n        });\n\n        // 查找所有AI车辆\n        const aiNodes = this.node.scene?.getComponentsInChildren(AIPlayer) || [];\n        aiNodes.forEach(ai => {\n            if (this.getVehicleId(ai.node) !== this._shooterId) {\n                vehicles.push(ai);\n            }\n        });\n\n        return vehicles;\n    }\n\n    /**\n     * 处理障碍物碰撞\n     */\n    private handleObstacleHit() {\n        if (this.bulletType === BulletType.ROCKET) {\n            // 火箭弹碰撞障碍物也会爆炸\n            this.handleRocketHit(null);\n        }\n    }\n\n    /**\n     * 根据子弹类型调整属性\n     */\n    // private adjustBulletProperties() {\n    //     switch (this.bulletType) {\n    //         case BulletType.NORMAL:\n    //             this.speed = 400;\n    //             this.lifeTime = 3.0;\n    //             break;\n    //         case BulletType.FLAME:\n    //             this.speed = 200;\n    //             this.lifeTime = 1.5;\n    //             break;\n    //         case BulletType.ROCKET:\n    //             this.speed = 300;\n    //             this.lifeTime = 4.0;\n    //             break;\n    //     }\n    // }\n\n    /**\n     * 获取车辆ID\n     */\n    private getVehicleId(vehicleNode: any): string {\n        const playerComp = vehicleNode.getComponent(player);\n        const aiComp = vehicleNode.getComponent(AIPlayer);\n        \n        if (playerComp) {\n            return 'player';\n        } else if (aiComp) {\n            return aiComp.getVehicleId ? aiComp.getVehicleId() : 'ai_unknown';\n        }\n        \n        return 'unknown';\n    }\n\n    /**\n     * 播放碰撞音效\n     */\n    private playHitSound() {\n        switch (this.bulletType) {\n            case BulletType.NORMAL:\n                SoundManager.instance.playSoundEffect('bulletHit');\n                break;\n            case BulletType.FLAME:\n                SoundManager.instance.playSoundEffect('flameHit');\n                break;\n            case BulletType.ROCKET:\n                SoundManager.instance.playSoundEffect('explosion');\n                break;\n        }\n    }\n\n    /**\n     * 销毁子弹\n     */\n    private destroyBullet() {\n        if (this.node && this.node.isValid) {\n            this.node.destroy();\n        }\n    }\n}\n"]}