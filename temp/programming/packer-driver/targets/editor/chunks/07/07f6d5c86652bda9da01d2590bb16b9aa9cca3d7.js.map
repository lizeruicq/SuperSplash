{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/driftClash/assets/scripts/GameHUD.ts"],"names":["_decorator","Component","Label","Button","ProgressBar","GameManager","ccclass","property","GameHUD","type","tooltip","updateTimer","gameManager","onLoad","start","getInstance","console","error","initializeAIRatioDisplay","initializeShootButton","update","deltaTime","updateInterval","updateCountdownDisplay","updatePaintRatioDisplay","updateAmmoDisplay","countdownLabel","formattedTime","getFormattedRemainingTime","string","remainingTime","getRemainingTime","color","lerp","constructor","allRatios","getAllVehiclePaintRatios","playerRatio","updatePlayerRatioDisplay","updateAIRatiosDisplay","ratio","percentage","Math","round","playerRatioLabel","_allRatios","sortedRatios","getSortedVehiclePaintRatios","aiRatios","filter","item","vehicleId","aiLabels","ai1RatioLabel","ai2RatioLabel","ai3RatioLabel","ai4RatioLabel","forEach","ratioData","index","length","displayName","getAIDisplayName","i","startsWith","parts","split","label","warn","resetHUD","shootButton","node","on","EventType","CLICK","onShootButtonClicked","playerShoot","playerComponent","getPlayerComponent","ammoLabel","currentAmmo","getCurrentAmmo","maxAmmo","getMaxAmmo","reloadProgressBar","isReloading","active","progress","getReloadProgress"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Button, ProgressBar } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { GameManager } from './GameManager';\n\n/**\n * 游戏内HUD界面\n * 显示倒计时和颜料占比信息\n */\n@ccclass('GameHUD')\nexport class GameHUD extends Component {\n    \n    // 倒计时显示\n    @property(Label)\n    countdownLabel: Label = null!;\n    \n    // 玩家颜料占比显示\n    @property(Label)\n    playerRatioLabel: Label = null!;\n\n    // AI颜料占比显示标签（手动拖拽设置）\n    @property({\n        type: Label,\n        tooltip: 'AI车辆1的颜料占比显示标签'\n    })\n    ai1RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆2的颜料占比显示标签'\n    })\n    ai2RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆3的颜料占比显示标签'\n    })\n    ai3RatioLabel: Label = null!;\n\n    @property({\n        type: Label,\n        tooltip: 'AI车辆4的颜料占比显示标签'\n    })\n    ai4RatioLabel: Label = null!;\n\n    // 射击系统UI\n    @property({\n        type: Button,\n        tooltip: '射击按钮'\n    })\n    shootButton: Button = null!;\n\n    @property({\n        type: Label,\n        tooltip: '弹药数量显示标签'\n    })\n    ammoLabel: Label = null!;\n\n    @property({\n        type: ProgressBar,\n        tooltip: '弹药补充进度条'\n    })\n    reloadProgressBar: ProgressBar = null!;\n    \n    // 更新频率控制\n    @property\n    updateInterval: number = 0.1; // 每0.1秒更新一次\n    \n    private updateTimer: number = 0;\n    private gameManager: GameManager = null!;\n\n    onLoad() {\n        this.updateTimer = 0;\n    }\n\n    start() {\n        this.gameManager = GameManager.getInstance();\n        if (!this.gameManager) {\n            console.error('GameHUD: GameManager未找到');\n            return;\n        }\n\n        // 初始化AI占比显示\n        this.initializeAIRatioDisplay();\n\n        // 初始化射击按钮\n        this.initializeShootButton();\n    }\n\n    update(deltaTime: number) {\n        if (!this.gameManager) return;\n        \n        this.updateTimer += deltaTime;\n        \n        // 按设定频率更新UI\n        if (this.updateTimer >= this.updateInterval) {\n            this.updateCountdownDisplay();\n            this.updatePaintRatioDisplay();\n            this.updateAmmoDisplay();\n            this.updateTimer = 0;\n        }\n    }\n\n    /**\n     * 更新倒计时显示\n     */\n    private updateCountdownDisplay(): void {\n        if (this.countdownLabel) {\n            const formattedTime = this.gameManager.getFormattedRemainingTime();\n            this.countdownLabel.string = formattedTime;\n            \n            // 当时间少于30秒时，可以改变颜色提醒\n            const remainingTime = this.gameManager.getRemainingTime();\n            if (remainingTime <= 30) {\n                this.countdownLabel.color = this.countdownLabel.color.lerp(\n                    new (this.countdownLabel.color.constructor as any)(255, 0, 0, 255),\n                    0.5\n                );\n            }\n        }\n    }\n\n    /**\n     * 更新颜料占比显示\n     */\n    private updatePaintRatioDisplay(): void {\n        const allRatios = this.gameManager.getAllVehiclePaintRatios();\n        \n        // 更新玩家占比\n        const playerRatio = allRatios['player'] || 0;\n        this.updatePlayerRatioDisplay(playerRatio);\n        \n        // 更新AI占比\n        this.updateAIRatiosDisplay(allRatios);\n    }\n\n    /**\n     * 更新玩家占比显示\n     * @param ratio 占比（0-1）\n     */\n    private updatePlayerRatioDisplay(ratio: number): void {\n        const percentage = Math.round(ratio * 100);\n        \n        if (this.playerRatioLabel) {\n            this.playerRatioLabel.string = `player: ${percentage}%`;\n        }\n        \n        // if (this.playerRatioBar) {\n        //     this.playerRatioBar.progress = ratio;\n        // }\n    }\n\n    /**\n     * 更新AI占比显示\n     * @param allRatios 所有车辆的占比\n     */\n    private updateAIRatiosDisplay(_allRatios: { [vehicleId: string]: number }): void {\n        // 获取排序后的占比数据\n        const sortedRatios = this.gameManager.getSortedVehiclePaintRatios();\n\n        // 只显示AI车辆（排除玩家）\n        const aiRatios = sortedRatios.filter(item => item.vehicleId !== 'player');\n\n        // 获取AI标签数组\n        const aiLabels = [this.ai1RatioLabel, this.ai2RatioLabel, this.ai3RatioLabel, this.ai4RatioLabel];\n\n        // 更新每个AI的显示\n        aiRatios.forEach((ratioData, index) => {\n            if (index < aiLabels.length && aiLabels[index]) {\n                const percentage = Math.round(ratioData.ratio * 100);\n                const displayName = this.getAIDisplayName(ratioData.vehicleId);\n                aiLabels[index].string = `${displayName}: ${percentage}%`;\n            }\n        });\n\n        // 清空未使用的标签\n        for (let i = aiRatios.length; i < aiLabels.length; i++) {\n            if (aiLabels[i]) {\n                aiLabels[i].string = '';\n            }\n        }\n    }\n\n\n\n    /**\n     * 获取AI的显示名称\n     * @param vehicleId AI车辆ID\n     * @returns 显示名称\n     */\n    private getAIDisplayName(vehicleId: string): string {\n        // 从vehicleId中提取简化的显示名称\n        if (vehicleId.startsWith('ai_')) {\n            const parts = vehicleId.split('_');\n            if (parts.length >= 2) {\n                return `AI-${parts[1]}`;\n            }\n        }\n        return vehicleId;\n    }\n\n    /**\n     * 初始化AI占比显示\n     */\n    private initializeAIRatioDisplay(): void {\n        // 初始化所有AI标签为空字符串\n        const aiLabels = [this.ai1RatioLabel, this.ai2RatioLabel, this.ai3RatioLabel, this.ai4RatioLabel];\n\n        aiLabels.forEach((label, index) => {\n            if (label) {\n                label.string = `AI-${index + 1}: 0%`;\n            } else {\n                console.warn(`GameHUD: AI${index + 1}RatioLabel未设置`);\n            }\n        });\n    }\n\n    /**\n     * 重置HUD显示\n     */\n    public resetHUD(): void {\n        if (this.countdownLabel) {\n            this.countdownLabel.string = \"02:00\";\n            this.countdownLabel.color = new (this.countdownLabel.color.constructor as any)(255, 255, 255, 255);\n        }\n\n        if (this.playerRatioLabel) {\n            this.playerRatioLabel.string = \"player: 0%\";\n        }\n\n        this.initializeAIRatioDisplay();\n    }\n\n    // ==================== 射击系统UI ====================\n\n    /**\n     * 初始化射击按钮\n     */\n    private initializeShootButton(): void {\n        if (this.shootButton) {\n            this.shootButton.node.on(Button.EventType.CLICK, this.onShootButtonClicked, this);\n        } else {\n            console.warn('GameHUD: 射击按钮未设置');\n        }\n    }\n\n    /**\n     * 射击按钮点击事件处理\n     */\n    private onShootButtonClicked(): void {\n        // 通知GameManager执行射击\n        if (this.gameManager) {\n            this.gameManager.playerShoot();\n        }\n    }\n\n    /**\n     * 更新弹药显示\n     */\n    private updateAmmoDisplay(): void {\n        if (!this.gameManager) return;\n\n        const playerComponent = this.gameManager.getPlayerComponent();\n        if (!playerComponent) return;\n\n        // 更新弹药数量显示\n        if (this.ammoLabel) {\n            const currentAmmo = playerComponent.getCurrentAmmo();\n            const maxAmmo = playerComponent.getMaxAmmo();\n            this.ammoLabel.string = `${currentAmmo}/${maxAmmo}`;\n        }\n\n        // 更新弹药补充进度条\n        if (this.reloadProgressBar) {\n            if (playerComponent.isReloading()) {\n                this.reloadProgressBar.node.active = true;\n                this.reloadProgressBar.progress = playerComponent.getReloadProgress();\n            } else {\n                this.reloadProgressBar.node.active = false;\n            }\n        }\n    }\n}\n"]}