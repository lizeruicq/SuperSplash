{"version":3,"sources":["file:///Users/zeruili/projects/cocos_project/TopRacing/assets/scripts/GameSceneManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","resources","UITransform","TempData","CameraFollow","player","AIController","ccclass","property","GameSceneManager","start","loadLevelAndCar","levelId","selectedLevel","carId","selectedCar","mapNode","playerNode","load","err","prefab","setPosition","playGround","addChild","notifyAIControllers","err2","prefab2","spawnChildren","spawnPoint","children","length","randomIndex","Math","floor","random","spawnNode","spawnPos","getWorldPosition","localPos","canvas","getComponent","convertToNodeSpaceAR","setRotation","getRotation","playerScript","init","angle","indexOf","name","console","log","aiControllers","node","scene","getComponentsInChildren","cameraFollow","camera","error","aiController","onScenePrefabLoaded"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, resources, UITransform, Vec3, Quat } from 'cc';\nimport { TempData } from './TempData';\nimport { CameraFollow } from './camera_follow';\nimport { player } from './player';\nimport { AIController } from './AIController';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameSceneManager')\nexport class GameSceneManager extends Component {\n    @property(Node)\n    playGround: Node = null!; // PlayGround节点\n\n    @property(Node)\n    canvas: Node = null!; // Canvas节点\n\n    @property(Node)\n    spawnPoint: Node = null!; // SpawnPoint节点\n\n    @property(Node)\n    camera: Node = null!; // Camera节点\n\n    start() {\n        this.loadLevelAndCar();\n    }\n\n    loadLevelAndCar() {\n        const levelId = TempData.selectedLevel;\n        const carId = TempData.selectedCar;\n        let mapNode: Node | null = null;\n        let playerNode: Node | null = null;\n        // 1. 加载并实例化场景背景\n        if (levelId) {\n            resources.load(`prefab/levels/${levelId}`, Prefab, (err, prefab) => {\n                if (!err && prefab) {\n                    mapNode = instantiate(prefab);\n                    mapNode.setPosition(0, 0, 0);\n                    this.playGround.addChild(mapNode);\n                    \n                    // 场景预制体加载完成，通知AIController查找AI车辆\n                    this.notifyAIControllers();\n                    \n                    // 2. 加载并实例化车辆\n                    if (carId) {\n                        resources.load(`prefab/cars/${carId}`, Prefab, (err2, prefab2) => {\n                            if (!err2 && prefab2) {\n                                playerNode = instantiate(prefab2);\n                                // 随机选择一个SpawnPoint的子节点\n                                const spawnChildren = this.spawnPoint.children;\n                                if (spawnChildren.length > 0) {\n                                    const randomIndex = Math.floor(Math.random() * spawnChildren.length);\n                                    const spawnNode = spawnChildren[randomIndex];\n                                    const spawnPos = spawnNode.getWorldPosition();\n                                    // 转换为Canvas的本地坐标\n                                    const localPos = this.canvas.getComponent(UITransform).convertToNodeSpaceAR(spawnPos);\n                                    playerNode.setPosition(localPos);\n                                    playerNode.setRotation(spawnNode.getRotation());\n                                    // 设置初始角度\n                                    const playerScript = playerNode.getComponent(player);\n                                    if (playerScript) {\n                                        playerScript.init(spawnNode.angle);\n                                    }\n                                \n                                    // 根据点位名称设置朝向\n                                    if ([\"point4\", \"point5\", \"point6\"].indexOf(spawnNode.name) !== -1) {\n                                        console.log(\"生成车辆在右侧\")\n                                        // playerNode.setRotationFromEuler(0, 0, 90);\n                                    } \n                                } \n                                this.canvas.addChild(playerNode);\n                                // 动态赋值所有AIController的playerNode\n                                const aiControllers = this.node.scene.getComponentsInChildren(AIController);\n                                // for (const aiCtrl of aiControllers) {\n                                //     aiCtrl.playerNode = playerNode;\n                                // }\n                                // 3. 通知相机\n                                const cameraFollow = this.camera.getComponent(CameraFollow);\n                                if (cameraFollow && mapNode && playerNode) {\n                                    cameraFollow.init(mapNode, playerNode);\n                                }\n                            }\n                            if (err2) {\n                                console.error('加载车辆预制体失败:', err2, carId);\n                                return;\n                            }\n                            if (!prefab2) {\n                                console.error('未找到车辆预制体:', carId);\n                                return;\n                            }\n                        });\n                    }\n                }\n                if (err) {\n                    console.error('加载关卡预制体失败:', err, levelId);\n                    return;\n                }\n                if (!prefab) {\n                    console.error('未找到关卡预制体:', levelId);\n                    return;\n                }\n            });\n        }\n    }\n\n    /**\n     * 通知所有AIController组件场景预制体已加载完成\n     */\n    private notifyAIControllers() {\n        const aiControllers = this.node.scene.getComponentsInChildren(AIController);\n        console.log(`找到 ${aiControllers.length} 个AIController组件，通知场景预制体加载完成`);\n        \n        for (const aiController of aiControllers) {\n            aiController.onScenePrefabLoaded();\n        }\n    }\n} "]}